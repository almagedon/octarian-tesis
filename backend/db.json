[
{
  "model": "auth.user",
  "pk": 1,
  "fields": {
    "password": "pbkdf2_sha256$30000$cyXE4FrZUTSu$x52kF1p2jvj0+jq/qDPPkxkLjdO+4bUlmKPL2VnVC6M=",
    "last_login": "2018-02-03T14:39:50.370Z",
    "is_superuser": true,
    "username": "isma",
    "first_name": "",
    "last_name": "",
    "email": "cesar.23.1995@gmail.com",
    "is_staff": true,
    "is_active": true,
    "date_joined": "2018-01-23T03:09:28.668Z",
    "groups": [],
    "user_permissions": []
  }
},
{
  "model": "auth.user",
  "pk": 2,
  "fields": {
    "password": "pbkdf2_sha256$30000$7JiPPjsnIMtH$gz7OMyMVavsJ7sJyN9bmEBlheZoiqWPI/+mRrPW4C38=",
    "last_login": null,
    "is_superuser": false,
    "username": "mirio",
    "first_name": "",
    "last_name": "",
    "email": "mirio@gmail.com",
    "is_staff": false,
    "is_active": true,
    "date_joined": "2018-01-27T16:45:01.573Z",
    "groups": [],
    "user_permissions": []
  }
},
{
  "model": "auth.user",
  "pk": 3,
  "fields": {
    "password": "",
    "last_login": null,
    "is_superuser": false,
    "username": "",
    "first_name": "",
    "last_name": "",
    "email": "WWWWW@gmail.com",
    "is_staff": false,
    "is_active": true,
    "date_joined": "2018-02-03T03:32:38.988Z",
    "groups": [],
    "user_permissions": []
  }
},
{
  "model": "api.comments",
  "pk": 1,
  "fields": {
    "status": true,
    "Partner": "19",
    "user": 2,
    "entyti": "1",
    "created_date": "2018-02-03T14:45:10.234Z",
    "comment": "hey it`s awasome t-t"
  }
},
{
  "model": "projects.categorysprojects",
  "pk": 1,
  "fields": {
    "name": "Arte",
    "state": true,
    "description": "proyectos de arte",
    "icon": "ios-color-palette-outline",
    "slug": "arte",
    "created_date": "2018-01-28T00:07:24.091Z",
    "modified_date": "2018-02-02T16:55:05.668Z"
  }
},
{
  "model": "projects.categorysprojects",
  "pk": 2,
  "fields": {
    "name": "Cultura",
    "state": true,
    "description": "awdawdawd",
    "icon": "ios-musical-notes-outline",
    "slug": "cultura",
    "created_date": "2018-01-28T00:07:42.921Z",
    "modified_date": "2018-02-02T16:56:19.985Z"
  }
},
{
  "model": "projects.categorysprojects",
  "pk": 3,
  "fields": {
    "name": "Agropecuario",
    "state": true,
    "description": "awdawdawd",
    "icon": "ios-bonfire-outline",
    "slug": "agropecuario",
    "created_date": "2018-01-28T00:07:42.921Z",
    "modified_date": "2018-02-02T17:01:03.670Z"
  }
},
{
  "model": "projects.categorysprojects",
  "pk": 4,
  "fields": {
    "name": "Tecnologia",
    "state": true,
    "description": "awdawdawd",
    "icon": "md-laptop",
    "slug": "tecnologia",
    "created_date": "2018-01-28T00:07:42.921Z",
    "modified_date": "2018-02-02T16:56:53.281Z"
  }
},
{
  "model": "projects.categorysprojects",
  "pk": 5,
  "fields": {
    "name": "Arquitectura",
    "state": true,
    "description": "awdawdawd",
    "icon": "ios-construct-outline",
    "slug": "arquitectura",
    "created_date": "2018-01-28T00:07:42.921Z",
    "modified_date": "2018-02-02T16:54:47.701Z"
  }
},
{
  "model": "projects.categorysprojects",
  "pk": 6,
  "fields": {
    "name": "Recreacion",
    "state": true,
    "description": "awdawdawd",
    "icon": "ios-partly-sunny-outline",
    "slug": "recreacion",
    "created_date": "2018-01-28T00:07:42.921Z",
    "modified_date": "2018-02-02T16:56:39.568Z"
  }
},
{
  "model": "projects.projects",
  "pk": 1,
  "fields": {
    "user": 1,
    "Category": 1,
    "name": "holass",
    "description": "awdawdwdwadwad",
    "file": "Proyectos/arbol_prelaciones_informatica_UNERG_2016.pdf",
    "image": "",
    "slug": "holass",
    "state": true,
    "created_date": "2018-01-28T01:34:16.846Z",
    "modified_date": "2018-01-28T01:34:16.846Z"
  }
},
{
  "model": "projects.projects",
  "pk": 2,
  "fields": {
    "user": 2,
    "Category": 2,
    "name": "zombieipsum",
    "description": "Zombies reversus ab inferno, nam malum cerebro. De carne animata corpora quaeritis. Summus sit\u200b\u200b, morbo vel maleficia? De Apocalypsi undead dictum mauris. Hi mortuis soulless creaturas, imo monstra adventus vultus comedat cerebella viventium. Qui offenderit rapto, terribilem incessu. The voodoo sacerdos suscitat mortuos comedere carnem. Search for solum oculi eorum defunctis cerebro. Nescio an Undead zombies. Sicut malus movie horror.",
    "file": "Proyectos/arbol_prelaciones_informatica_UNERG_2016.pdf",
    "image": "",
    "slug": "zombieipsum",
    "state": true,
    "created_date": "2018-01-28T01:34:16.846Z",
    "modified_date": "2018-01-28T01:34:16.846Z"
  }
},
{
  "model": "projects.projects",
  "pk": 3,
  "fields": {
    "user": 1,
    "Category": 3,
    "name": "batman-ipsum",
    "description": "Na na na na na na Batman! Batman! Batman! na na na na na na na na na na na na na na na na na na na na na Batman! na na na na na na na na na na na na na na na na na na na na na Batman! na na na na na naNa na na na na na na na na na na na na na na na na na Batman! na na na na na na na na na Batman! na na na na na na na na na Batman! na na na na na na na na na na na na Batman! na na na na na na na na na na na na Batman! na na na Na na na na na na na na na na na na na na na na na na na na na na na na Batman! na na na na na na na na na na na na na na na Na na na na na na na na na na na na na na na na na na na na na Batman! na na na Batman! na na na na na na na na na na na na na na na na na na Batman! na na na na na na Batman! Na na na na na na na na na na na na na na na na na na Na na na Batman! na na na na na na na na na na na na na na na na na na Batman! na na na Na na na na na na na na na na na na na na na na na na na na na na na na na na na na na na na na na Batman! na na na na na na na na na Batman! Batman! na na na na na na na na na na na na na na na na na na Na na na Batman! Batman! na na na Batman! na na na Batman! na na na na na na na na na Batman! na na na na na na na na na na na na na na na na na na na na na na na na",
    "file": "Proyectos/arbol_prelaciones_informatica_UNERG_2016.pdf",
    "image": "Images/SnvTkUv_sClZDuB.jpg",
    "slug": "batman-ipsum",
    "state": true,
    "created_date": "2018-01-28T01:34:16.846Z",
    "modified_date": "2018-02-02T16:54:20.721Z"
  }
},
{
  "model": "projects.projects",
  "pk": 4,
  "fields": {
    "user": 2,
    "Category": 3,
    "name": "las estrellas son legion",
    "description": "# Prueba Tecnica FrontEnd-Grability\r\n\r\n## Descripcion.\r\n\r\n\tLa app a sido deasrrollado implementando las diversas tecnologias destacando:\r\n\r\n- [x] [WebPack2](https://webpack.js.org/)\r\n\r\n- [x] [React.js](https://facebook.github.io/react/)\r\n- [x] [Redux](http://es.redux.js.org/)\r\n- [x] [Redux-thunk](https://github.com/gaearon/redux-thunk)\r\n\r\n- [x] [Sass](https://sass-lang.com)\r\n- [x] [Yarn](https://yarnpkg.com/lang/en/)\r\n- [x] [Npm](https://www.npmjs.com/)\r\n\r\n- [x] [Git](https://github.com/)\r\n\r\n\tUn especial agradecimiento a:\r\n\r\n[marvin](https://github.com/workco/marvin)\r\n>Asombroso boilerplate facil, ligero, increible.\r\n>una gran herramienta.\r\n\r\n[Erifranck Nu\u00f1ez](https://www.linkedin.com/in/erifranck-nu%C3%B1ez-948a32b7/)\r\n>Maestro, asesor y amigo.\r\n\r\n## Instrucciones del aplicativo.\r\n\r\n\tEs necesario tener instalado:\r\n- [nodeJs](https://nodejs.org/es/)\r\n- [Sass](https://sass-lang.com)\r\n- [yarn](https://yarnpkg.com/lang/en/)\r\n- [git](https://github.com/)\r\n\r\n### Pasos para su instalacion:\r\n \r\n - Pocicionarnos en una carpe de nuestra elccion para este ejemplo Documentos.\r\n - Clonar el repositorio [aqui](https://github.com/almagedon/grability-test)\r\n - Entrar en el repositorio creado\r\n - instalar los paquetes pertinentes por npm o yarn\r\n - por ultimo correr el servidor de nuesta aplicacion \r\n\r\n```\r\n$ cd Documentos\r\n$ git clone git@github.com:almagedon/grability-test.git\r\n$ cd grability-test\r\n$ npm install\r\n$ npm run dev\r\n```\r\n\r\n### Arbol de directorios:\r\n\u2500 grability-test  \r\n    \u251c\u2500\u2500 package.json  \r\n    \u251c\u2500\u2500 README.md  \r\n    \u251c\u2500\u2500 source  \r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 assets // iconos utilizados para esta aplicacion  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 icons  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 circle.svg  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 square.svg  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 triangle.svg  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 img  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 book1.jpg  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 book2.jpg  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 btn_arrow_left.png  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 btn_arrow_right.png  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 btn-close.png  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 btn-delete.png  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 btn-favourites-default.png  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 btn-favourites-primary.png  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 characters.png  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 favourites.png  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 grability-logo.png  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 link-arrow.png  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Marvel-logo.png  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 search.png  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 shopping-cart-primary.png  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 svgExample.svg  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 workco-logo.svg  \r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 index.html  \r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 js  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 actions  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 appBarSearch.js  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 app.js  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 appModalData.js  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 api  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 index.js //archivo con el que se hacen las peticiones a la api  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 components // componentes que pertenecen a las vistas  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Containers  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 HeroCard.jsx // componente donde se resenta cada heroe  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 HeroCard.scss  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 HeroFavorites.jsx // componentes para la seccion de favoritos  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 HeroModal.jsx // modal para agregar a favoritos  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 HeroModal.scss  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 HeroMoreContiner.jsx  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 HeroMoreContiner.scss  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 NavSortCharacters.js // seaccion para  ordenar  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 Global  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 containers  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 Search.jsx  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Footer.jsx // footer  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Icon.jsx  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 NavBar.jsx // navbar y buscador  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 dev  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 logger-exports.js  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 logger.js  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 index.js  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 reducers  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 app.js  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 index.js  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 views  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 About  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 index.jsx  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 App  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 index.jsx  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Dashboard // vista principal  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 index.jsx  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 styles.scss  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 NotFound  \r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2514\u2500\u2500 index.jsx  \r\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 scss // scss base  \r\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 app.scss  \r\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 base  \r\n    \u2502\u00a0\u00a0         \u251c\u2500\u2500 _app.scss  \r\n    \u2502\u00a0\u00a0         \u251c\u2500\u2500 _breakpoints.scss  \r\n    \u2502\u00a0\u00a0         \u2514\u2500\u2500 _normalize.scss  \r\n    \u251c\u2500\u2500 webpack.config.js  \r\n    \u2514\u2500\u2500 yarn.lock",
    "file": "Proyectos/Jessi_wwHDuVf.pdf",
    "image": "Images/images_lR0mHLL.jpeg",
    "slug": "las-estrellas-son-legion",
    "state": true,
    "created_date": "2018-02-02T17:07:07.301Z",
    "modified_date": "2018-02-02T17:07:07.301Z"
  }
},
{
  "model": "projects.projects",
  "pk": 5,
  "fields": {
    "user": 2,
    "Category": 3,
    "name": "amanezer rojo",
    "description": "# Marvin \u2605\u2605\r\n\r\nUniversal React and Redux, Webpack boilerplate.\r\n\r\nMarvin is internal project by [Work & Co](https://work.co).\r\nWe love React and use it a lot. So Marvin is meant to be a starting point for our React projects.\r\nBut as we love open source too, it is publicly available for anyone interested in using it.\r\n\r\n![Marvin](/marvin.jpg)\r\n\r\nName comes from a fictional character [Marvin](https://en.wikipedia.org/wiki/Marvin_(character)), android from the [The Hitchhiker's Guide to the Galaxy](https://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy) book as a homage to it's author [Douglas Adams](https://en.wikipedia.org/wiki/Douglas_Adams).\r\n\r\n**Please note** that v1.0.0 switched to [redux-saga](https://github.com/redux-saga/redux-saga) from `redux-thunk`\r\nand [postcss](https://github.com/postcss/postcss) from `scss`.\r\n\r\n## Table of contents\r\n\r\n* [What is this?](#user-content-what-is-this)\r\n* [Features](#user-content-features)\r\n* [Setup](#user-content-setup)\r\n* [npm tasks](#user-content-npm-tasks)\r\n* [Running client in dev mode](#user-content-running-client-in-dev-mode)\r\n* [Build client (production)](#user-content-build-client-production)\r\n* [Running client in preview production mode](#user-content-running-client-in-preview-production-mode)\r\n* [Universal dev mode](#user-content-universal-dev-mode)\r\n* [Universal build (production)](#user-content-universal-build-production)\r\n* [Removing server rendering related stuff](#user-content-removing-server-rendering-related-stuff)\r\n* [Browser support](#user-content-browser-support)\r\n* [Known issues](#user-content-known-issues)\r\n* [Linting](#user-content-linting)\r\n* [Misc](#user-content-misc)\r\n* [Changelog](CHANGELOG.md)\r\n\r\n## What is this?\r\n\r\nOpinionated boilerplate for kicking off React/Redux applications.\r\n\r\nIt includes complete, minimal react app.\r\nBy complete we mean it has examples for:\r\n\r\n- components (both container/views and regular ones)\r\n- routes\r\n- reducers (redux + redux-saga)\r\n- actions (both sync and async),\r\n- postcss (with autoprefixer)\r\n- dummy API (using awesome [Star Wars API](https://swapi.co/))\r\n- assets (images + inline SVGs)\r\n\r\n## Features\r\n\r\n- [x] React\r\n- [x] React router v4\r\n- [x] Redux\r\n- [x] Redux-Saga\r\n- [x] Redux DevTools (you need to have [browser extension](https://github.com/zalmoxisus/redux-devtools-extension) installed)\r\n- [x] Universal rendering with async server data\r\n- [x] Webpack 3 (development and production config)\r\n- [x] Hot Module Replacement\r\n- [x] Immutable reducer data\r\n- [x] Babel - static props, decorators\r\n- [x] PostCSS (with autoprefixing)\r\n- [x] Linting\r\n- [x] Git hooks - lint before push\r\n- [x] Tree shaking build\r\n- [x] Import SVGs as React components\r\n\r\n## TODO\r\n\r\n- [ ] Internationalization\r\n- [ ] Tests\r\n\r\n\r\n## Setup\r\n\r\nTested with node 8.5.x\r\n\r\n```\r\nnpm install\r\n```\r\n\r\n## npm tasks\r\n\r\n* `start` - starts client app only in development mode, using webpack dev server\r\n* `client:dev` - same as `start`\r\n* `client:build` - builds client application\r\n* `client:preview` - runs client application in *production* mode, using webpack dev server (use for local testing of the client production build)\r\n* `server:dev` - starts server app only in development mode (use for testing server responses)\r\n* `universal:dev` - runs both server and client in watch mode, automatically restarts server on changes\r\n* `universal:build` - builds both server and client\r\n\r\nThere are other tasks as well which shouldn't be used on their own.\r\n\r\n## Running client in dev mode\r\n\r\n```sh\r\nnpm start\r\n# or\r\nnpm run client:dev\r\n```\r\n\r\nVisit `http://localhost:8080/` from your browser of choice.\r\nServer is visible from the local network as well.\r\n\r\n## Build client (production)\r\n\r\nBuild will be placed in the `build` folder.\r\n\r\n```\r\nnpm run client:build\r\n```\r\n\r\nIf your app is not running on the server root you should change `publicPath` at two places.\r\n\r\nIn `webpack.config.js` (ATM line 76):\r\n\r\n```js\r\noutput: {\r\n  path: buildPath,\r\n  publicPath: '/your-app/',\r\n  filename: 'app-[hash].js',\r\n},\r\n```\r\n\r\nand in `source/js/constants/routes` (line 1):\r\n\r\n```js\r\nconst publicPath = '/your-app/'; // Don't forget the trailing slash (`/`).\r\n```\r\n\r\nDevelopment server will be available at `http://localhost:8080/your-app/`.\r\n\r\n## Running client in preview production mode\r\n\r\nThis command will start webpack dev server, but with `NODE_ENV` set to `production`.\r\nEverything will be minified and served.\r\nHot reload will not work, so you need to refresh the page manually after changing the code.\r\n\r\n```\r\nnpm run client:preview\r\n```\r\n\r\n## Universal dev mode\r\n\r\n```\r\nnpm run universal:dev\r\n```\r\n\r\nVisit `http://localhost:8080/` from your browser of choice.\r\nBoth server and client will be rebuilt on change. Again no hot module reload.\r\n\r\n## Universal build (production)\r\n\r\n```\r\nnpm run universal:build\r\n```\r\n\r\ncopy `package.json` and `build` folder to your production server\r\n\r\ninstall only production dependencies and run server\r\n\r\n```\r\nnpm install --production\r\n\r\nnode ./build/server.js\r\n```\r\n\r\n## Removing server rendering related stuff\r\n\r\nIf you are not using server rendering first run:\r\n\r\n```sh\r\nnode remove-universal.js\r\n```\r\n\r\nthen you have to manually remove unused code from\r\n`source/js/config/store.js` which is marked with:\r\n\r\n```\r\n// Remove if you are not using server rendering.\r\n```\r\n\r\n#### Remove unused tasks\r\n\r\nYou should remove unused tasks from `package.json` and unused params from `source/js/config/store.js` too.\r\nClient app is going to work without this but it is better to remove them as they just create noise.\r\n\r\nIf anyone is willing to automate this, help will be greatly appreciated.\r\n\r\n## Browser support\r\n\r\nModern browsers and IE10+.\r\n\r\n## Known issues\r\n\r\nThese are known bugs that affect **development mode only**.\r\n\r\n* In some versions of Safari `cheap-eval-source-map` results in\r\n  \"Can't find variable: SockJS\".\r\n  To solve it change `webpack.config.js`:\r\n\r\n  ```js\r\n  // from\r\n  devtool: IS_PRODUCTION ? false : 'cheap-eval-source-map',\r\n  // to\r\n  devtool: IS_PRODUCTION ? false : 'source-map',\r\n  ```\r\n\r\n* Hot module reload is not working in IE 10.\r\n  To test the app in development mode you'll need to change\r\n  `inline` to `false` in `webpack/dev-server.js`\r\n\r\n  ```js\r\n    inline: false, // Change to false for IE10 dev mode\r\n  ```\r\n\r\n\r\n## Linting\r\n\r\nESLint is set up by extending [eslint-config-airbnb](https://www.npmjs.com/package/eslint-config-airbnb),\r\nwith some options overridden to our preferences.\r\n\r\n```\r\nnpm run lint\r\n```\r\n\r\n### Linting Git hooks\r\n\r\nLinting pre-push hook is not enabled by default.\r\nIt will prevent the push if lint task fails,\r\nbut you need to add it manually by running:\r\n\r\n```\r\nnpm run hook-add\r\n```\r\n\r\nTo remove it, run this task:\r\n\r\n```\r\nnpm run hook-remove\r\n```\r\n\r\n## Misc\r\n\r\n### Async server data\r\n\r\nDocumentation is WIP, for now follow the example in `source/js/server.js`.\r\n\r\n### Importing images in CSS\r\n\r\nPlease note that paths to images in CSS files are relative to `source/css/index.css` as it imports all of the other `.css` files.\r\n\r\n```\r\n.BackgroundImgExample {\r\n  background-image: url(../assets/img/book1.jpg);\r\n}\r\n```\r\n\r\n### Importing SVGs as components\r\n\r\nJust import your `.svg` files from the `source/assets/svg/` folder, and you are good to go.\r\n\r\n```\r\nimport CircleIcon from 'svg/circle.svg';\r\n\r\n// then in your render\r\n\r\n<CircleIcon />\r\n```",
    "file": "Proyectos/go-document.pdf",
    "image": "Images/01.jpg",
    "slug": "amanezer-rojo",
    "state": true,
    "created_date": "2018-02-02T17:10:36.415Z",
    "modified_date": "2018-02-02T17:10:36.415Z"
  }
},
{
  "model": "projects.projects",
  "pk": 6,
  "fields": {
    "user": 1,
    "Category": 3,
    "name": "domo arigato mr roboto",
    "description": "# react-markdown\r\n\r\nRenders Markdown as pure React components.\r\n\r\n[![npm version](https://img.shields.io/npm/v/react-markdown.svg?style=flat-square)](http://browsenpm.org/package/react-markdown)[![Build Status](https://img.shields.io/travis/rexxars/react-markdown/master.svg?style=flat-square)](https://travis-ci.org/rexxars/react-markdown)[![Code Climate](https://img.shields.io/codeclimate/github/rexxars/react-markdown.svg?style=flat-square)](https://codeclimate.com/github/rexxars/react-markdown/)\r\n\r\nDemo available at https://rexxars.github.io/react-markdown/\r\n\r\n---\r\n\r\nreact-markdown is proudly sponsored by\r\n\r\n<a href=\"https://www.sanity.io/\" rel=\"nofollow\" target=\"_blank\">\r\n  <img src=\"https://www.sanity.io/static/images/logo_red.svg?v=2\" width=\"300\"><br />\r\n  Sanity: The Headless CMS Construction Kit\r\n</a>\r\n\r\n---\r\n\r\n## Installing\r\n\r\n```\r\nnpm install --save react-markdown\r\n```\r\n\r\n## Basic usage\r\n\r\n```js\r\nconst React = require('react')\r\nconst ReactDOM = require('react-dom')\r\nconst ReactMarkdown = require('react-markdown')\r\n\r\nconst input = '# This is a header\\n\\nAnd this is a paragraph'\r\n\r\nReactDOM.render(\r\n  <ReactMarkdown source={input} />,\r\n  document.getElementById('container')\r\n)\r\n```\r\n\r\n## Notes\r\n\r\nIf you don't need to render HTML, this component does not use `dangerouslySetInnerHTML` at all -\r\nthis is a Good Thing\u2122.\r\n\r\n## Inline HTML is broken\r\n\r\nInline HTML is currently broken for any tags that include attributes. A vague idea of how to fix\r\nthis has been planned, but if you're feeling up to the task, create an issue and let us know!\r\n\r\n## Options\r\n\r\n* `source` - _string_ The Markdown source to parse (**required**)\r\n* `className` - _string_ Class name of the container element (default: `''`).\r\n* `escapeHtml` - _boolean_ Setting to `false` will cause HTML to be rendered (see note above about\r\n  broken HTML, though). Be aware that setting this to `false` might cause security issues if the\r\n  input is user-generated. Use at your own risk. (default: `true`).\r\n* `skipHtml` - _boolean_ Setting to `true` will skip inlined and blocks of HTML (default: `false`).\r\n* `sourcePos` - _boolean_ Setting to `true` will add `data-sourcepos` attributes to all elements,\r\n  indicating where in the markdown source they were rendered from (default: `false`).\r\n* `allowedTypes` - _array_ Defines which types of nodes should be allowed (rendered). (default: all\r\n  types).\r\n* `disallowedTypes` - _array_ Defines which types of nodes should be disallowed (not rendered).\r\n  (default: none).\r\n* `unwrapDisallowed` - _boolean_ Setting to `true` will try to extract/unwrap the children of\r\n  disallowed nodes. For instance, if disallowing `Strong`, the default behaviour is to simply skip\r\n  the text within the strong altogether, while the behaviour some might want is to simply have the\r\n  text returned without the strong wrapping it. (default: `false`)\r\n* `allowNode` - _function_ Function execute if in order to determine if the node should be allowed.\r\n  Ran prior to checking `allowedTypes`/`disallowedTypes`. Returning a truthy value will allow the\r\n  node to be included. Note that if this function returns `true` and the type is not in\r\n  `allowedTypes` (or specified as a `disallowedType`), it won't be included. The function will\r\n  receive three arguments argument (`node`, `index`, `parent`), where `node` contains different\r\n  properties depending on the node type.\r\n* `transformLinkUri` - _function|null_ Function that gets called for each encountered link with a\r\n  single argument - `uri`. The returned value is used in place of the original. The default link URI\r\n  transformer acts as an XSS-filter, neutralizing things like `javascript:`, `vbscript:` and `file:`\r\n  protocols. If you specify a custom function, this default filter won't be called, but you can\r\n  access it as `require('react-markdown').uriTransformer`. If you want to disable the default\r\n  transformer, pass `null` to this option.\r\n* `transformImageUri` - _function|null_ Function that gets called for each encountered image with a\r\n  single argument - `uri`. The returned value is used in place of the original.\r\n* `renderers` - _object_ An object where the keys represent the node type and the value is a React\r\n  component. The object is merged with the default renderers. The props passed to the component\r\n  varies based on the type of node.\r\n\r\n## Node types\r\n\r\nThe node types available are the following, and applies to both `renderers` and\r\n`allowedTypes`/`disallowedTypes`:\r\n\r\n* `root` - Root container element that contains the rendered markdown\r\n* `break` - Hard-break (`<br>`)\r\n* `paragraph` - Paragraph (`<p>`)\r\n* `emphasis` - Emphasis (`<em>`)\r\n* `strong` - Strong/bold (`<strong>`)\r\n* `thematicBreak` - Horizontal rule / thematic break (`<hr>`)\r\n* `blockquote` - Block quote (`<blockquote>`)\r\n* `delete` - Deleted/strike-through (`<del>`)\r\n* `link` - Link (`<a>`)\r\n* `image` - Image (`<img>`)\r\n* `linkReference` - Link (through a reference) (`<a>`)\r\n* `imageReference` - Image (through a reference) (`<img>`)\r\n* `table` - Table (`<table>`)\r\n* `tableHead` - Table head (`<thead>`)\r\n* `tableBody` - Table body (`<tbody>`)\r\n* `tableRow` - Table row (`<tr>`)\r\n* `tableCell` - Table cell (`<td>`/`<th>`)\r\n* `list` - List (`<ul>`/`<ol>`)\r\n* `listItem` - List item (`<li>`)\r\n* `definition` - Definition (not rendered by default)\r\n* `heading` - Heading (`<h1>`-`<h6>`)\r\n* `inlineCode` - Inline code (`<code>`)\r\n* `code` - Block of code (`<pre><code>`)\r\n* `html` - HTML node (Best-effort rendering)\r\n\r\nNote: Disallowing a node will also prevent the rendering of any children of that node, unless the\r\n`unwrapDisallowed` option is set to `true`. Eg, disallowing a paragraph will not render it's\r\nchildren text nodes.\r\n\r\n## Developing\r\n\r\n```bash\r\ngit clone git@github.com:rexxars/react-markdown.git\r\ncd react-markdown\r\nnpm install\r\nnpm test\r\n```\r\n\r\n## License\r\n\r\nMIT \u00a9 [Espen Hovlandsdal](https://espen.codes/)",
    "file": "Proyectos/Jessi_BYkZvWW.pdf",
    "image": "Images/NLSl3_NW26lEg.jpg",
    "slug": "domo-arigato-mr-roboto",
    "state": true,
    "created_date": "2018-02-02T17:13:34.122Z",
    "modified_date": "2018-02-02T17:13:34.122Z"
  }
},
{
  "model": "projects.projects",
  "pk": 7,
  "fields": {
    "user": 2,
    "Category": 5,
    "name": "El principe de las espinas",
    "description": "# A React/Redux Authentication Demo Site, using DjangoRestFramework/DjangoRestAuth\r\n\r\n-It is a good demonstration of how to integrate react/redux with django-rest-framework to build\r\na fully functional web application. \r\n\r\n-It can also serve as a starter template for building a variety\r\nof web applications that needs authentication.\r\n\r\n## Backend:\r\n   - django 1.11\r\n   - django-rest-framework 3.7\r\n   - django-rest-auth 0.9.2\r\n\r\n## Frontend:\r\n   - webpack\r\n   - React v16\r\n   - React Router 4\r\n   - Redux\r\n   - reactstrap (Bootstrap 4 components)\r\n\r\n\r\n## How to use it\r\n\r\nClone the repository, which includes both backend and frontend.\r\n\r\n## Backend: Django, Django Rest Framework and Django-Rest-Auth\r\n\r\ncd to django_backend directory\r\n\r\ncreate your virtualenv and activate (python3) \r\nunder win: python -m venv 'envname'\r\n\r\nrun `pip install -r requirements.txt` to install all django dependencies.\r\n\r\nrun `python manage.py migrate` to migrate database.\r\n\r\nrun `python manage.py runserver` to start django development server to serve the demo site.\r\n\r\nthe backend server should be localhost:8000.\r\n\r\n## Frontend: React/Redux\r\n\r\nall JavaScript and html source code are within react_src directory, bundle.js will be generated in \r\nstatic/js directory. index.html will be generated in templates/project directory.\r\n\r\nrun `npm install` to install all node dependencies.\r\n\r\nrun `npm run start` to start the webpack dev server for frontend app.\r\n\r\nnow you can go to localhost:8083 to access the main page of the demo site.\r\n\r\n## Issue Reporting\r\n\r\nIf you have found a bug or feature request, please report them at the repository issues section.",
    "file": "Proyectos/Cheo_QkobOAI.pdf",
    "image": "Images/webpack_logo_on_white_bg_940x296.png",
    "slug": "el-principe-de-las-espinas",
    "state": true,
    "created_date": "2018-02-02T17:22:01.232Z",
    "modified_date": "2018-02-02T17:22:01.232Z"
  }
},
{
  "model": "projects.projects",
  "pk": 8,
  "fields": {
    "user": 2,
    "Category": 3,
    "name": "Elantris",
    "description": "# channels-obstruction\r\nA simple game of Obstruction created to explore Django + Django Channels + ReactJS\r\nBlog Post and Tutorial at: [http://www.codyparker.com/django-channels-with-react](http://www.codyparker.com/django-channels-with-react)\r\n\r\n\r\n## Synopsis\r\n\r\nI started this project to explore the [Django Channels](https://github.com/django/channels), which is an upcoming core app that adds asynchronous WebSocket support to the wonderful [Django Framework](http://www.djangoproject.com). Channels makes it very easy to build \"real-time\" apps in pure Django and Python, providing a great way to develop applications that require features such as \"real-time\" collaboration or chat for example.  \r\n\r\n[Obstruction](http://www.papg.com/show?2XMX) is a 2-player pen and paper game which involves players taking turns claiming free spots on a grid. The spot they choose, and all surrounding spots are then claimed for that player and can no longer be claimed by another player. The play continues back-and-forth until there are no free spots to claim. The last player to successfully claim a spot, wins the game.\r\n\r\nThis project also uses [React](https://facebook.github.io/react/) to handle the reactive, client-side components. I picked React because I like it, but it could be swapped out with Angular/Vue/Knockout/etc....\r\n\r\n## Features\r\n\r\n* Full game functionality:\r\n    * Authentication - Signup / Login\r\n    * Game Lobby with live updating list of available games\r\n    * Ability to create a game that will show up in other users' availiable games list\r\n    * Gameboard that enforces Obstruction rules and allows players to take turns and see the results in real-time\r\n    * Game log that tracks all moves and reports them live as they occur\r\n    * Players can chat in the game log\r\n* Lobby and Gameboard are made up of ReactJS components on the client-side\r\n* Examples of how to mix standard Django templating with ReactJS\r\n* Webpack integration to create separate bundles needed for different parts of the application\r\n* Django Rest Framework used to help serialize data needed by React as well as provides API endpoints for client-side data calls\r\n* Mixed use of DRF, standard Django context sent from the view, as well as communication through channels to demostrate multiple ways to interact with data and the Django backend\r\n\r\n## Requirements\r\n\r\n* Django >= 1.9\r\n* [Django Channels](https://github.com/django/channels)\r\n* [Django Rest Framework](http://www.django-rest-framework.org/)\r\n* [Django Webpack Loader](https://github.com/owais/django-webpack-loader)\r\n* Node & Node Package Manager\r\n\r\n## Installation\r\n\r\n* Fork and clone this repository\r\n* Create a Python virtual environemnt\r\n* In that environment, run ```pip install -r requirements.txt``` inside your project\r\n* Install node modules with ```npm install```\r\n* Create the local database with ```python manage.py migrate```\r\n* Run webpack to build the components with ```webpack``` \r\n* Run Django development server on port 8080 - ```python manage.py runserver 8080```",
    "file": "Proyectos/curriculum_vitae_jA0iuK6.pdf",
    "image": "Images/MV5BMTU2MjY2NDc0M15BMl5BanBnXkFtZTgwNzQ5MzczMTI._V1_SY1000_CR006751000_AL_.jpg",
    "slug": "elantris",
    "state": true,
    "created_date": "2018-02-02T17:24:05.736Z",
    "modified_date": "2018-02-02T17:24:05.736Z"
  }
},
{
  "model": "projects.projects",
  "pk": 9,
  "fields": {
    "user": 2,
    "Category": 5,
    "name": "Liroy Yenkins",
    "description": "# Roadmap\r\n\r\nThe roadmap is a living document, and it is likely that priorities will change, but the list below should give some indication of our plans for the next major release, and for the future.\r\n\r\n## Version 1 (published on NPM under the `next` tag)\r\n\r\nReleasing stable v1 is our top priority. It's going to be huge \u2728.\r\nWe are just at the beginning, we hope to make it:\r\n- the **simplest** React UI library available for new Front-End developers to start with.\r\n- **very customizable** so highly UI demanding production applications can save time building on top of it.\r\n\r\nMaterial-UI was started [3 years ago](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46).\r\nThe ecosystem has evolved a lot since then, we have also learned a lot.\r\n[@nathanmarks](https://github.com/nathanmarks/) started an ambitious task, rebuilding Material-UI from the **ground-up**\r\ntaking advantage of this knowledge to address long-standing issues.\r\nExpect various **breaking changes**.\r\n\r\nThe core team has been dedicated to the rewrite effort for one and a half years.\r\nIf you are interested in following our progress or if you want to help us reach that goal faster, you can have a look at the following milestones:\r\n- ~~[v1.0.0-beta](https://github.com/mui-org/material-ui/milestone/22?closed=1)~~ - reached!\r\n- [v1.0.0-prerelease](https://github.com/mui-org/material-ui/milestone/14)\r\n- [v1.0.0](https://github.com/mui-org/material-ui/milestone/23)\r\n\r\n## Q&A with the v1 version\r\n\r\nThe v1-beta version has matured, so we think that it's time to communicate more on this effort. The following Q&A is an attempt at answering some of your questions.\r\n\r\n### Summarizing, what are our main problems with CSS?\r\n\r\nThe CSS (cascading style sheets) specification emerged in 1994.\r\nAt that time, a bunch of others specifications were competing.\r\nIt was the cascading concept that made CSS succeed over its competitors, by allowing users to provide their own style-sheet, that will be later combined with browsers and authors style-sheets.\r\nThat feature was removed 2 years ago from the most popular browser.\r\nMy point is, our needs have evolved quite a bit since then.\r\n\r\nBack in the beginning of Material-UI, we had many issues with the first **LESS approach**.\r\nAside from [the problem with CSS at scale](https://speakerdeck.com/vjeux/react-css-in-js) raised by @vjeux, we had the following ones:\r\n- We had a **dependency** on the LESS build chain with no way to abstract it away.\r\nUsers needed to change their theme variables. @gpbl was maintaining a [SASS version]( https://github.com/gpbl/material-ui-sass). (Today, we could be using *[cssnext](http://cssnext.io/)*).\r\n- The theme was computed at **build time** but a Material component must be able to render quite differently depending on his context that can only be known at runtime.\r\n(Tomorrow, CSS variables will help a lot)\r\n- We were shipping a **big monolithic** CSS file.\r\nThat's not great for performance (for example it goes against the [PRPL pattern](https://www.polymer-project.org/1.0/toolbox/server) suggested by the Polymer team).\r\nThat was also an issue for users wanting to use a single component without paying for all the CSS upfront.\r\n- We used multi-level selectors, making the **override** of styles challenging.\r\n\r\nWe later came up with an **inline-style approach** solving the majority of our issues.\r\nBut:\r\n- We had lost around 25% of the performance \ud83d\udc22.\r\nComputing the inline-style at each render with no caching isn't really efficient.\r\n- Some more advanced CSS feature weren't available, e.g. keyframes, pseudo-elements, pseudo-classes \ud83d\udc85.\r\n- Media queries weren't available on the server. At least [not yet](http://caniuse.com/#feat=client-hints-dpr-width-viewport).\r\n- Debugging was really challenging. Browser dev tools aren't tuned for inline-styles.\r\n- React v15 has changed the method of injecting styles into the DOM meaning, for example, that prefixing all browsers for `display:flex` is no longer possible \ud83d\udca5.\r\n\r\n### Does JSS solve them?\r\n\r\nYes, it does. You can have a look at [this presentation](https://github.com/oliviertassinari/a-journey-toward-better-style) for more details.\r\n\r\n### When do we intend to release stable v1?\r\n\r\nWe don't have an ETA for the release of the `v1`, however, we are going to try to follow this plan and hope for a Q1-Q2 2018 release:\r\n\r\n1. ~~We completely address the styling issue before moving from *alpha* to [*beta*](https://github.com/mui-org/material-ui/milestone/22).~~\r\n2. ~~We publish our first beta releases.~~\r\n3. We merge the v1-beta branch into master\r\n5. We publish our first pre-releases, if all goes well, we move to the next step.\r\n6. We publish v1 \ud83c\udf89\r\n\r\nAt that point, some features and components from Material-UI v0.x will be missing in the v1.\r\nSo, what about them?\r\n- First, both versions can be used at the same time, people can progressively migrate, one component at the time.\r\n- Then, **with the help of the community** and over time, we will support more and more components.\r\n- We would rather **support few use-cases very well** and allow people to build on top of it **than many poorly**.\r\n\r\n### Have we ever considered using the best libraries for each piece of functionality and provide only a wrapper for the UI?\r\n\r\nWe have, it really depends on the problem we are trying to solve.\r\nFor UI related things, providing a wrapper for the functionality is often the wrong approach.\r\nWe think that it should be done the other way around, i.e. providing a low-level API that can be combined with third-party libraries, e.g.:\r\n - [react-virtualized](https://github.com/bvaughn/react-virtualized)\r\n - [react-swipeable-views](https://github.com/oliviertassinari/react-swipeable-views)\r\n - [react-autosuggest](https://github.com/moroshko/react-autosuggest)\r\n - [react-popper](https://github.com/souporserious/react-popper)\r\n - [downshift](https://github.com/paypal/downshift)\r\n - [react-dnd](https://github.com/gaearon/react-dnd)\r\n\r\nOn the other hand, using a smart date library for the DatePicker / TimePicker would probably be much better as date management is tricky and not a core business.\r\n\r\n## After stable v1\r\n\r\n- **Theming**. We will invest in the theming solution. We would love to see **non Material Design UI** built with Material-UI. [@oliviertassinari](https://github.com/oliviertassinari/) is working on a proof of concept.\r\n- **Type checking**. We need to improve TypeScript and Flow coverage of the library.\r\n- **Bundle size**. We need the library to be as small as possible. We already monitor the bundle size with size-limit. We need to think of the solutions. For instance, supporting preact can help.\r\n- **Performance**. We can't optimize something we can't measure. We don't have any CI performance benchmark. We will need to build one and start investigating bottlenecks.\r\n- **Learning materials**. The documentation is equally as important as the quality of the implementation. We could be authoring a [learning tutorial](https://learnnextjs.com/) like Next.js is doing, or some [egghead.io](https://egghead.io/) courses.",
    "file": "Proyectos/best-practices-in-drf_8h0kyde.pdf",
    "image": "Images/HeroesAbercrombie.jpg",
    "slug": "liroy-yenkins",
    "state": true,
    "created_date": "2018-02-02T17:35:43.244Z",
    "modified_date": "2018-02-02T17:35:43.245Z"
  }
},
{
  "model": "projects.projects",
  "pk": 10,
  "fields": {
    "user": 2,
    "Category": 5,
    "name": "La guia intergalactica del auto estopista",
    "description": "# Mui-Org Governance\r\n\r\n## Overview\r\n\r\nMui-Org houses projects related to [Material-UI](http://www.material-ui.com/), a set of [React](https://reactjs.org/) components\r\nthat implement [Google's Material Design](https://material.io/guidelines/material-design/introduction.html)\r\nspecification. Our mission is to create a customizable Material Design implementation\r\nfor anyone to use. We value an open, collaborative, and diverse community where anyone can join in\r\ndiscussions, learn from one another, and contribute to the project. This document describes how\r\nwe govern ourselves, how decisions are made, and how someone could engage with the project.\r\n\r\n## Roles & Responsibilities\r\n\r\n### Users\r\n\r\nUsers are members of the community that are using Material-UI or one of Mui-Org's projects. Anyone\r\ncan be a user and we encourage users to participate in the community as much as possible in the\r\nfollowing ways.\r\n- Evangelize Material-UI by [linking to our website](http://www.material-ui.com/),\r\n[following us on twitter](https://twitter.com/i/notifications), or just talking about us with your\r\nfriends.\r\n- Tell us what we're doing well or where we can improve.\r\n- Give us moral support. A \"Thank You\" always brightens our day!\r\n- [Support us on OpenCollective](https://opencollective.com/material-ui).\r\n\r\n### Contributors\r\n\r\nContributors are members of the community who contribute to Material-UI or one of Mui-Org's projects\r\nin concrete ways. Anyone can be a contributor. In addition to their participation as a user, they\r\nalso contribute in the following ways.\r\n- Support new users by answering questions on\r\n[StackOverflow](https://stackoverflow.com/questions/tagged/material-ui) and\r\n[Gitter](https://gitter.im/mui-org/material-ui).\r\n- Reviewing and commenting on [existing pull requests](https://github.com/mui-org/material-ui/pulls)\r\nand [issues](https://github.com/mui-org/material-ui/issues).\r\n- Reporting bugs or missing features by [creating an issue](https://github.com/mui-org/material-ui/issues/new).\r\n- Fixing bugs, adding features, and\r\n[improving our documentation](https://github.com/mui-org/material-ui/tree/v1-beta/docs) by\r\n[submitting a pull request](https://github.com/mui-org/material-ui/pulls).\r\n\r\n### Committers\r\n\r\nCommitters are members of the community who are committed to the development, success, and mission\r\nof Material-UI or one of Mui-Org's projects. New committers are nominated and voted on by existing\r\ncommitters. Under rare circumstances, the Core Team can vote to revoke a committer's privilege. In\r\naddition to their participation as a contributor, committers have the following privileges.\r\n- Access to a private Gitter room to talk about issues and coordinate development.\r\n- Ability to label, close, and manage [Github issues](https://github.com/mui-org/material-ui/issues).\r\n- Ability to [close and merge pull requests](https://github.com/mui-org/material-ui/pulls?q=is%3Apr+is%3Aclosed).\r\n- Ability to [submit expenses](https://opencollective.com/material-ui/expenses/new) that are\r\napproved by the Core Team.\r\n- Ability to receive payment for work done on Material-UI or one of Mui-Org's projects.\r\n- Nominate and vote on new committers and Core Team members.\r\n\r\n### Core Team\r\n\r\nCore Team members are individuals that are invested in the success of Mui-Org. Their\r\nadministrative responsibilities ensure the sustainability and smooth running of Mui-Org. New\r\nCore Team members are nominated and voted on by existing committers. Under rare circumstances, a\r\nCore Team member can be removed by a two thirds majority vote by the Core Team. Two people\r\nfrom the same company cannot exist on the Core Team.\r\n\r\nAt the end of each quarter, the Core Team may issue payments to one or more committers. The amount\r\nissued will be determined by a formula that's transparent to all committers and voted on by the\r\nCore Team. The formula can change at the end of the quarter, but not mid-quarter unless unanimously\r\nagreed upon by the Core Team and all committers with whom any payment may be owed. These payments\r\nare aimed to [increase the sustainability of our organization](https://medium.com/call-em-all/material-ui-the-move-to-a-sustainable-open-source-project-5261d07b5067) by supporting committers.\r\n\r\nIn addition to their participation as a committer, Core Team members have the following privileges.\r\n- Ability to [publish a release](https://github.com/mui-org/material-ui/releases).\r\n- Access to Material-UI's [Twitter](https://twitter.com/i/notifications) and Medium account.\r\n- Owner access to [mui-org on GitHub](https://github.com/mui-org).\r\n- Admin access to various tools and services ([npm](https://www.npmjs.com/package/material-ui),\r\n[CircleCi](https://circleci.com/gh/mui-org/material-ui),\r\n[BrowserStack](https://www.browserstack.com/), [Gitter](https://gitter.im/mui-org/material-ui)).\r\n- Admin access to all financial accounts.\r\n- Vote on the removal of committers and Core Team members.\r\n- Vote on decisions when consensus cannot be reached by the community.\r\n- Vote on approval of expenses and payments on [OpenCollective](https://opencollective.com/material-ui).\r\nCore Team members cannot vote to approve their own expenses or payments.\r\n- Vote on changes to project governance.\r\n\r\n### Core Team Chair\r\n\r\nThe Core Team Chair is a single individual that's a coordinator and facilitator of the Core Team.\r\nThe Chair ensures that all governance processes are followed and has the casting vote in case of a\r\ntie within the Core Team. The Core Team Chair is voted for by the Core Team and can serve as Chair\r\nuntil they step down or removed by a two thirds majority vote by the Core Team.\r\n\r\n## Resources\r\n\r\n- Governance Models - [http://oss-watch.ac.uk/resources/governancemodels](http://oss-watch.ac.uk/resources/governancemodels)\r\n- Sustain OSS Report - [https://sustainoss.org/assets/pdf/SustainOSS-west-2017-report.pdf](https://sustainoss.org/assets/pdf/SustainOSS-west-2017-report.pdf)\r\n- Elinor Ostrom's 8 Principles for Managing A Commons - [http://www.onthecommons.org/magazine/elinor-ostroms-8-principles-managing-commmons#sthash.dqF8J3Bs.dpbs](http://www.onthecommons.org/magazine/elinor-ostroms-8-principles-managing-commmons#sthash.dqF8J3Bs.dpbs)",
    "file": "Proyectos/Horario_de_Clases_24200891_19_5.pdf",
    "image": "Images/8269511891_71528a37dd_k.jpg",
    "slug": "la-guia-intergalactica-del-auto-estopista",
    "state": true,
    "created_date": "2018-02-02T17:38:20.276Z",
    "modified_date": "2018-02-02T17:38:20.276Z"
  }
},
{
  "model": "projects.projects",
  "pk": 11,
  "fields": {
    "user": 1,
    "Category": 3,
    "name": "Snow crash",
    "description": "[![CircleCI](https://circleci.com/gh/r-park/todo-redux-saga.svg?style=shield&circle-token=dc7e150ab97aab05db8f8da4b5874488bf8da0c6)](https://circleci.com/gh/r-park/todo-redux-saga)\r\n\r\n\r\n# A simple Todo app example built with [Create React App](https://github.com/facebookincubator/create-react-app), [React Redux](https://github.com/reactjs/react-redux), [Redux Saga](https://github.com/redux-saga/redux-saga), and Firebase\r\n\r\nTry the demo at <a href=\"https://todo-redux-saga.firebaseapp.com\" target=\"_blank\">todo-redux-saga.firebaseapp.com</a>.\r\n\r\n\r\n## Stack\r\n\r\n- Create React App\r\n- React Redux\r\n- React Router\r\n- React Router Redux\r\n- Redux Saga\r\n- Redux Devtools Extension for Chrome\r\n- Firebase SDK with OAuth authentication\r\n- Immutable\r\n- Reselect\r\n- SASS\r\n\r\n\r\n## Quick Start\r\n\r\n```shell\r\n$ git clone https://github.com/r-park/todo-redux-saga.git\r\n$ cd todo-redux-saga\r\n$ npm install\r\n$ npm start\r\n```\r\n\r\n## Deploying to Firebase\r\n#### Prerequisites:\r\n- Create a free Firebase account at https://firebase.google.com\r\n- Create a project from your [Firebase account console](https://console.firebase.google.com)\r\n- Configure the authentication providers for your Firebase project from your Firebase account console\r\n\r\n#### Configure this app with your project-specific details:\r\n```json\r\n// .firebaserc\r\n\r\n{\r\n  \"projects\": {\r\n    \"default\": \"your-project-id\"\r\n  }\r\n}\r\n```\r\n\r\n```javascript\r\n// src/firebase/config.js\r\n\r\nexport const firebaseConfig = {\r\n  apiKey: 'your api key',\r\n  authDomain: 'your-project-id.firebaseapp.com',\r\n  databaseURL: 'https://your-project-id.firebaseio.com',\r\n  storageBucket: 'your-project-id.appspot.com'\r\n};\r\n```\r\n\r\n#### Install firebase-tools:\r\n```shell\r\n$ npm install -g firebase-tools\r\n```\r\n\r\n#### Build and deploy the app:\r\n```shell\r\n$ npm run build\r\n$ firebase login\r\n$ firebase use default\r\n$ firebase deploy\r\n```\r\n\r\n\r\n## NPM Commands\r\n\r\n|Script|Description|\r\n|---|---|\r\n|`npm start`|Start webpack development server @ `localhost:3000`|\r\n|`npm run build`|Build the application to `./build` directory|\r\n|`npm test`|Test the application; watch for changes and retest|",
    "file": "Proyectos/Cheo_xqATCmX.pdf",
    "image": "Images/Zm9B8rr_tsoaClX.jpg",
    "slug": "snow-crash",
    "state": true,
    "created_date": "2018-02-02T17:40:30.971Z",
    "modified_date": "2018-02-02T17:40:30.972Z"
  }
},
{
  "model": "projects.projects",
  "pk": 12,
  "fields": {
    "user": 1,
    "Category": 5,
    "name": "la era del diamante",
    "description": "This project was bootstrapped with [Create React Native App](https://github.com/react-community/create-react-native-app).\r\n\r\nBelow you'll find information about performing common tasks. The most recent version of this guide is available [here](https://github.com/react-community/create-react-native-app/blob/master/react-native-scripts/template/README.md).\r\n\r\n## Table of Contents\r\n\r\n* [Updating to New Releases](#updating-to-new-releases)\r\n* [Available Scripts](#available-scripts)\r\n  * [npm start](#npm-start)\r\n  * [npm test](#npm-test)\r\n  * [npm run ios](#npm-run-ios)\r\n  * [npm run android](#npm-run-android)\r\n  * [npm run eject](#npm-run-eject)\r\n* [Writing and Running Tests](#writing-and-running-tests)\r\n* [Environment Variables](#environment-variables)\r\n  * [Configuring Packager IP Address](#configuring-packager-ip-address)\r\n* [Adding Flow](#adding-flow)\r\n* [Customizing App Display Name and Icon](#customizing-app-display-name-and-icon)\r\n* [Sharing and Deployment](#sharing-and-deployment)\r\n  * [Publishing to Expo's React Native Community](#publishing-to-expos-react-native-community)\r\n  * [Building an Expo \"standalone\" app](#building-an-expo-standalone-app)\r\n  * [Ejecting from Create React Native App](#ejecting-from-create-react-native-app)\r\n    * [Build Dependencies (Xcode & Android Studio)](#build-dependencies-xcode-android-studio)\r\n    * [Should I Use ExpoKit?](#should-i-use-expokit)\r\n* [Troubleshooting](#troubleshooting)\r\n  * [Networking](#networking)\r\n  * [iOS Simulator won't open](#ios-simulator-wont-open)\r\n  * [QR Code does not scan](#qr-code-does-not-scan)\r\n\r\n## Updating to New Releases\r\n\r\nYou should only need to update the global installation of `create-react-native-app` very rarely, ideally never.\r\n\r\nUpdating the `react-native-scripts` dependency of your app should be as simple as bumping the version number in `package.json` and reinstalling your project's dependencies.\r\n\r\nUpgrading to a new version of React Native requires updating the `react-native`, `react`, and `expo` package versions, and setting the correct `sdkVersion` in `app.json`. See the [versioning guide](https://github.com/react-community/create-react-native-app/blob/master/VERSIONS.md) for up-to-date information about package version compatibility.\r\n\r\n## Available Scripts\r\n\r\nIf Yarn was installed when the project was initialized, then dependencies will have been installed via Yarn, and you should probably use it to run these commands as well. Unlike dependency installation, command running syntax is identical for Yarn and NPM at the time of this writing.\r\n\r\n### `npm start`\r\n\r\nRuns your app in development mode.\r\n\r\nOpen it in the [Expo app](https://expo.io) on your phone to view it. It will reload if you save edits to your files, and you will see build errors and logs in the terminal.\r\n\r\nSometimes you may need to reset or clear the React Native packager's cache. To do so, you can pass the `--reset-cache` flag to the start script:\r\n\r\n```\r\nnpm start -- --reset-cache\r\n# or\r\nyarn start -- --reset-cache\r\n```\r\n\r\n#### `npm test`\r\n\r\nRuns the [jest](https://github.com/facebook/jest) test runner on your tests.\r\n\r\n#### `npm run ios`\r\n\r\nLike `npm start`, but also attempts to open your app in the iOS Simulator if you're on a Mac and have it installed.\r\n\r\n#### `npm run android`\r\n\r\nLike `npm start`, but also attempts to open your app on a connected Android device or emulator. Requires an installation of Android build tools (see [React Native docs](https://facebook.github.io/react-native/docs/getting-started.html) for detailed setup). We also recommend installing Genymotion as your Android emulator. Once you've finished setting up the native build environment, there are two options for making the right copy of `adb` available to Create React Native App:\r\n\r\n##### Using Android Studio's `adb`\r\n\r\n1. Make sure that you can run adb from your terminal.\r\n2. Open Genymotion and navigate to `Settings -> ADB`. Select \u201cUse custom Android SDK tools\u201d and update with your [Android SDK directory](https://stackoverflow.com/questions/25176594/android-sdk-location).\r\n\r\n##### Using Genymotion's `adb`\r\n\r\n1. Find Genymotion\u2019s copy of adb. On macOS for example, this is normally `/Applications/Genymotion.app/Contents/MacOS/tools/`.\r\n2. Add the Genymotion tools directory to your path (instructions for [Mac](http://osxdaily.com/2014/08/14/add-new-path-to-path-command-line/), [Linux](http://www.computerhope.com/issues/ch001647.htm), and [Windows](https://www.howtogeek.com/118594/how-to-edit-your-system-path-for-easy-command-line-access/)).\r\n3. Make sure that you can run adb from your terminal.\r\n\r\n#### `npm run eject`\r\n\r\nThis will start the process of \"ejecting\" from Create React Native App's build scripts. You'll be asked a couple of questions about how you'd like to build your project.\r\n\r\n**Warning:** Running eject is a permanent action (aside from whatever version control system you use). An ejected app will require you to have an [Xcode and/or Android Studio environment](https://facebook.github.io/react-native/docs/getting-started.html) set up.\r\n\r\n## Customizing App Display Name and Icon\r\n\r\nYou can edit `app.json` to include [configuration keys](https://docs.expo.io/versions/latest/guides/configuration.html) under the `expo` key.\r\n\r\nTo change your app's display name, set the `expo.name` key in `app.json` to an appropriate string.\r\n\r\nTo set an app icon, set the `expo.icon` key in `app.json` to be either a local path or a URL. It's recommended that you use a 512x512 png file with transparency.\r\n\r\n## Writing and Running Tests\r\n\r\nThis project is set up to use [jest](https://facebook.github.io/jest/) for tests. You can configure whatever testing strategy you like, but jest works out of the box. Create test files in directories called `__tests__` or with the `.test` extension to have the files loaded by jest. See the [the template project](https://github.com/react-community/create-react-native-app/blob/master/react-native-scripts/template/App.test.js) for an example test. The [jest documentation](https://facebook.github.io/jest/docs/en/getting-started.html) is also a wonderful resource, as is the [React Native testing tutorial](https://facebook.github.io/jest/docs/en/tutorial-react-native.html).\r\n\r\n## Environment Variables\r\n\r\nYou can configure some of Create React Native App's behavior using environment variables.\r\n\r\n### Configuring Packager IP Address\r\n\r\nWhen starting your project, you'll see something like this for your project URL:\r\n\r\n```\r\nexp://192.168.0.2:19000\r\n```\r\n\r\nThe \"manifest\" at that URL tells the Expo app how to retrieve and load your app's JavaScript bundle, so even if you load it in the app via a URL like `exp://localhost:19000`, the Expo client app will still try to retrieve your app at the IP address that the start script provides.\r\n\r\nIn some cases, this is less than ideal. This might be the case if you need to run your project inside of a virtual machine and you have to access the packager via a different IP address than the one which prints by default. In order to override the IP address or hostname that is detected by Create React Native App, you can specify your own hostname via the `REACT_NATIVE_PACKAGER_HOSTNAME` environment variable:\r\n\r\nMac and Linux:\r\n\r\n```\r\nREACT_NATIVE_PACKAGER_HOSTNAME='my-custom-ip-address-or-hostname' npm start\r\n```\r\n\r\nWindows:\r\n```\r\nset REACT_NATIVE_PACKAGER_HOSTNAME='my-custom-ip-address-or-hostname'\r\nnpm start\r\n```\r\n\r\nThe above example would cause the development server to listen on `exp://my-custom-ip-address-or-hostname:19000`.\r\n\r\n## Adding Flow\r\n\r\nFlow is a static type checker that helps you write code with fewer bugs. Check out this [introduction to using static types in JavaScript](https://medium.com/@preethikasireddy/why-use-static-types-in-javascript-part-1-8382da1e0adb) if you are new to this concept.\r\n\r\nReact Native works with [Flow](http://flowtype.org/) out of the box, as long as your Flow version matches the one used in the version of React Native.\r\n\r\nTo add a local dependency to the correct Flow version to a Create React Native App project, follow these steps:\r\n\r\n1. Find the Flow `[version]` at the bottom of the included [.flowconfig](.flowconfig)\r\n2. Run `npm install --save-dev flow-bin@x.y.z` (or `yarn add --dev flow-bin@x.y.z`), where `x.y.z` is the .flowconfig version number.\r\n3. Add `\"flow\": \"flow\"` to the `scripts` section of your `package.json`.\r\n4. Add `// @flow` to any files you want to type check (for example, to `App.js`).\r\n\r\nNow you can run `npm run flow` (or `yarn flow`) to check the files for type errors.\r\nYou can optionally use a [plugin for your IDE or editor](https://flow.org/en/docs/editors/) for a better integrated experience.\r\n\r\nTo learn more about Flow, check out [its documentation](https://flow.org/).\r\n\r\n## Sharing and Deployment\r\n\r\nCreate React Native App does a lot of work to make app setup and development simple and straightforward, but it's very difficult to do the same for deploying to Apple's App Store or Google's Play Store without relying on a hosted service.\r\n\r\n### Publishing to Expo's React Native Community\r\n\r\nExpo provides free hosting for the JS-only apps created by CRNA, allowing you to share your app through the Expo client app. This requires registration for an Expo account.\r\n\r\nInstall the `exp` command-line tool, and run the publish command:\r\n\r\n```\r\n$ npm i -g exp\r\n$ exp publish\r\n```\r\n\r\n### Building an Expo \"standalone\" app\r\n\r\nYou can also use a service like [Expo's standalone builds](https://docs.expo.io/versions/latest/guides/building-standalone-apps.html) if you want to get an IPA/APK for distribution without having to build the native code yourself.\r\n\r\n### Ejecting from Create React Native App\r\n\r\nIf you want to build and deploy your app yourself, you'll need to eject from CRNA and use Xcode and Android Studio.\r\n\r\nThis is usually as simple as running `npm run eject` in your project, which will walk you through the process. Make sure to install `react-native-cli` and follow the [native code getting started guide for React Native](https://facebook.github.io/react-native/docs/getting-started.html).\r\n\r\n#### Should I Use ExpoKit?\r\n\r\nIf you have made use of Expo APIs while working on your project, then those API calls will stop working if you eject to a regular React Native project. If you want to continue using those APIs, you can eject to \"React Native + ExpoKit\" which will still allow you to build your own native code and continue using the Expo APIs. See the [ejecting guide](https://github.com/react-community/create-react-native-app/blob/master/EJECTING.md) for more details about this option.\r\n\r\n## Troubleshooting\r\n\r\n### Networking\r\n\r\nIf you're unable to load your app on your phone due to a network timeout or a refused connection, a good first step is to verify that your phone and computer are on the same network and that they can reach each other. Create React Native App needs access to ports 19000 and 19001 so ensure that your network and firewall settings allow access from your device to your computer on both of these ports.\r\n\r\nTry opening a web browser on your phone and opening the URL that the packager script prints, replacing `exp://` with `http://`. So, for example, if underneath the QR code in your terminal you see:\r\n\r\n```\r\nexp://192.168.0.1:19000\r\n```\r\n\r\nTry opening Safari or Chrome on your phone and loading\r\n\r\n```\r\nhttp://192.168.0.1:19000\r\n```\r\n\r\nand\r\n\r\n```\r\nhttp://192.168.0.1:19001\r\n```\r\n\r\nIf this works, but you're still unable to load your app by scanning the QR code, please open an issue on the [Create React Native App repository](https://github.com/react-community/create-react-native-app) with details about these steps and any other error messages you may have received.\r\n\r\nIf you're not able to load the `http` URL in your phone's web browser, try using the tethering/mobile hotspot feature on your phone (beware of data usage, though), connecting your computer to that WiFi network, and restarting the packager.\r\n\r\n### iOS Simulator won't open\r\n\r\nIf you're on a Mac, there are a few errors that users sometimes see when attempting to `npm run ios`:\r\n\r\n* \"non-zero exit code: 107\"\r\n* \"You may need to install Xcode\" but it is already installed\r\n* and others\r\n\r\nThere are a few steps you may want to take to troubleshoot these kinds of errors:\r\n\r\n1. Make sure Xcode is installed and open it to accept the license agreement if it prompts you. You can install it from the Mac App Store.\r\n2. Open Xcode's Preferences, the Locations tab, and make sure that the `Command Line Tools` menu option is set to something. Sometimes when the CLI tools are first installed by Homebrew this option is left blank, which can prevent Apple utilities from finding the simulator. Make sure to re-run `npm/yarn run ios` after doing so.\r\n3. If that doesn't work, open the Simulator, and under the app menu select `Reset Contents and Settings...`. After that has finished, quit the Simulator, and re-run `npm/yarn run ios`.\r\n\r\n### QR Code does not scan\r\n\r\nIf you're not able to scan the QR code, make sure your phone's camera is focusing correctly, and also make sure that the contrast on the two colors in your terminal is high enough. For example, WebStorm's default themes may [not have enough contrast](https://github.com/react-community/create-react-native-app/issues/49) for terminal QR codes to be scannable with the system barcode scanners that the Expo app uses.\r\n\r\nIf this causes problems for you, you may want to try changing your terminal's color theme to have more contrast, or running Create React Native App from a different terminal. You can also manually enter the URL printed by the packager script in the Expo app's search bar to load it manually.",
    "file": "Proyectos/Winnie_X3XG2b0.pdf",
    "image": "Images/test-primi.png",
    "slug": "la-era-del-diamante",
    "state": true,
    "created_date": "2018-02-02T17:42:55.349Z",
    "modified_date": "2018-02-02T17:44:55.998Z"
  }
},
{
  "model": "projects.projects",
  "pk": 13,
  "fields": {
    "user": 2,
    "Category": 1,
    "name": "Buenos presagios",
    "description": "### functionName\r\n\r\nExplain briefly what the snippet does.\r\n\r\nExplain briefly how the snippet works.\r\n\r\n```js\r\nconst functionName = arguments =>\r\n  {functionBody}\r\n```\r\n\r\n```js\r\nfunctionName('sampleInput') // 'sampleOutput'\r\n```",
    "file": "Proyectos/IRON-GOLD_excerpt.pdf",
    "image": "Images/screenshot-notinerd.com-2017-11-04-16-12-01-167.png",
    "slug": "buenos-presagios",
    "state": true,
    "created_date": "2018-02-02T17:53:56.297Z",
    "modified_date": "2018-02-02T18:03:54.673Z"
  }
},
{
  "model": "projects.projects",
  "pk": 14,
  "fields": {
    "user": 2,
    "Category": 1,
    "name": "La piedad del primero",
    "description": "# channels-obstruction\r\nA simple game of Obstruction created to explore Django + Django Channels + ReactJS\r\nBlog Post and Tutorial at: [http://www.codyparker.com/django-channels-with-react](http://www.codyparker.com/django-channels-with-react)\r\n\r\n\r\n## Synopsis\r\n\r\nI started this project to explore the [Django Channels](https://github.com/django/channels), which is an upcoming core app that adds asynchronous WebSocket support to the wonderful [Django Framework](http://www.djangoproject.com). Channels makes it very easy to build \"real-time\" apps in pure Django and Python, providing a great way to develop applications that require features such as \"real-time\" collaboration or chat for example.  \r\n\r\n[Obstruction](http://www.papg.com/show?2XMX) is a 2-player pen and paper game which involves players taking turns claiming free spots on a grid. The spot they choose, and all surrounding spots are then claimed for that player and can no longer be claimed by another player. The play continues back-and-forth until there are no free spots to claim. The last player to successfully claim a spot, wins the game.\r\n\r\nThis project also uses [React](https://facebook.github.io/react/) to handle the reactive, client-side components. I picked React because I like it, but it could be swapped out with Angular/Vue/Knockout/etc....\r\n\r\n## Features\r\n\r\n* Full game functionality:\r\n    * Authentication - Signup / Login\r\n    * Game Lobby with live updating list of available games\r\n    * Ability to create a game that will show up in other users' availiable games list\r\n    * Gameboard that enforces Obstruction rules and allows players to take turns and see the results in real-time\r\n    * Game log that tracks all moves and reports them live as they occur\r\n    * Players can chat in the game log\r\n* Lobby and Gameboard are made up of ReactJS components on the client-side\r\n* Examples of how to mix standard Django templating with ReactJS\r\n* Webpack integration to create separate bundles needed for different parts of the application\r\n* Django Rest Framework used to help serialize data needed by React as well as provides API endpoints for client-side data calls\r\n* Mixed use of DRF, standard Django context sent from the view, as well as communication through channels to demostrate multiple ways to interact with data and the Django backend\r\n\r\n## Requirements\r\n\r\n* Django >= 1.9\r\n* [Django Channels](https://github.com/django/channels)\r\n* [Django Rest Framework](http://www.django-rest-framework.org/)\r\n* [Django Webpack Loader](https://github.com/owais/django-webpack-loader)\r\n* Node & Node Package Manager\r\n\r\n## Installation\r\n\r\n* Fork and clone this repository\r\n* Create a Python virtual environemnt\r\n* In that environment, run ```pip install -r requirements.txt``` inside your project\r\n* Install node modules with ```npm install```\r\n* Create the local database with ```python manage.py migrate```\r\n* Run webpack to build the components with ```webpack``` \r\n* Run Django development server on port 8080 - ```python manage.py runserver 8080```",
    "file": "Proyectos/Jessi_FIYnFVh.pdf",
    "image": "Images/3734764542_ec31df008c_b.jpg",
    "slug": "la-piedad-del-primero",
    "state": true,
    "created_date": "2018-02-02T17:56:45.399Z",
    "modified_date": "2018-02-02T17:56:45.399Z"
  }
},
{
  "model": "projects.projects",
  "pk": 15,
  "fields": {
    "user": 2,
    "Category": 1,
    "name": "Ritos iguales",
    "description": "### indexOfAll\r\n\r\nReturns all indices of `val` in an array. If `val` never occurs, returns `[]`.\r\n\r\nUse `Array.forEach()` to loop over elements and `Array.push()` to store indices for matching elements.\r\nReturn the array of indices.\r\n\r\n```js\r\nconst indexOfAll = (arr, val) => {\r\n  const indices = [];\r\n  arr.forEach((el, i) => el === val && indices.push(i));\r\n  return indices;\r\n};\r\n```\r\n\r\n<details>\r\n<summary>Examples</summary>\r\n\r\n```js\r\nindexOfAll([1, 2, 3, 1, 2, 3], 1); // [0,3]\r\nindexOfAll([1, 2, 3], 4); // []\r\n```\r\n\r\n</details>\r\n\r\n<br>[\u2b06 Back to top](#table-of-contents)\r\n\r\n\r\n### initial\r\n\r\nReturns all the elements of an array except the last one.\r\n\r\nUse `arr.slice(0,-1)` to return all but the last element of the array.\r\n\r\n```js\r\nconst initial = arr => arr.slice(0, -1);\r\n```\r\n\r\n<details>\r\n<summary>Examples</summary>\r\n\r\n```js\r\ninitial([1, 2, 3]); // [1,2]\r\n```\r\n\r\n</details>\r\n\r\n<br>[\u2b06 Back to top](#table-of-contents)\r\n\r\n\r\n### initialize2DArray\r\n\r\nInitializes a 2D array of given width and height and value.\r\n\r\nUse `Array.map()` to generate h rows where each is a new array of size w initialize with value. If the value is not provided, default to `null`.\r\n\r\n```js\r\nconst initialize2DArray = (w, h, val = null) =>\r\n  Array.from({ length: h }).map(() => Array.from({ length: w }).fill(val));\r\n```\r\n\r\n<details>\r\n<summary>Examples</summary>\r\n\r\n```js\r\ninitialize2DArray(2, 2, 0); // [[0,0], [0,0]]\r\n```\r\n\r\n</details>\r\n\r\n<br>[\u2b06 Back to top](#table-of-contents)",
    "file": "Proyectos/curriculum_vitae_OjS1wBM.pdf",
    "image": "Images/MV5BMTk1Mjg2MzQxMF5BMl5BanBnXkFtZTgwMzUwNDkyNDM._V1_SY1000_CR006741000_AL_.jpg",
    "slug": "ritos-iguales",
    "state": true,
    "created_date": "2018-02-02T18:00:05.372Z",
    "modified_date": "2018-02-02T18:00:05.372Z"
  }
},
{
  "model": "projects.projects",
  "pk": 16,
  "fields": {
    "user": 2,
    "Category": 1,
    "name": "cumbres borrascosas",
    "description": "### initializeArrayWithRange\r\n\r\nInitializes an array containing the numbers in the specified range where `start` and `end` are inclusive with their common difference `step`.\r\n\r\nUse `Array.from(Math.ceil((end+1-start)/step))` to create an array of the desired length(the amounts of elements is equal to `(end-start)/step` or `(end+1-start)/step` for inclusive end), `Array.map()` to fill with the desired values in a range.\r\nYou can omit `start` to use a default value of `0`.\r\nYou can omit `step` to use a default value of `1`.\r\n\r\n```js\r\nconst initializeArrayWithRange = (end, start = 0, step = 1) =>\r\n  Array.from({ length: Math.ceil((end + 1 - start) / step) }).map((v, i) => i * step + start);\r\n```\r\n\r\n<details>\r\n<summary>Examples</summary>\r\n\r\n```js\r\ninitializeArrayWithRange(5); // [0,1,2,3,4,5]\r\ninitializeArrayWithRange(7, 3); // [3,4,5,6,7]\r\ninitializeArrayWithRange(9, 0, 2); // [0,2,4,6,8]\r\n```\r\n\r\n</details>\r\n\r\n<br>[\u2b06 Back to top](#table-of-contents)\r\n\r\n\r\n### initializeArrayWithRangeRight\r\n\r\nInitializes an array containing the numbers in the specified range (in reverse) where `start` and `end` are inclusive with their common difference `step`.\r\n\r\nUse `Array.from(Math.ceil((end+1-start)/step))` to create an array of the desired length(the amounts of elements is equal to `(end-start)/step` or `(end+1-start)/step` for inclusive end), `Array.map()` to fill with the desired values in a range.\r\nYou can omit `start` to use a default value of `0`.\r\nYou can omit `step` to use a default value of `1`.\r\n\r\n```js\r\nconst initializeArrayWithRangeRight = (end, start = 0, step = 1) =>\r\n  Array.from({ length: Math.ceil((end + 1 - start) / step) }).map(\r\n    (v, i, arr) => (arr.length - i - 1) * step + start\r\n  );\r\n```\r\n\r\n<details>\r\n<summary>Examples</summary>\r\n\r\n```js\r\ninitializeArrayWithRangeRight(5); // [5,4,3,2,1,0]\r\ninitializeArrayWithRangeRight(7, 3); // [7,6,5,4,3]\r\ninitializeArrayWithRangeRight(9, 0, 2); // [8,6,4,2,0]\r\n```\r\n\r\n</details>\r\n\r\n<br>[\u2b06 Back to top](#table-of-contents)\r\n\r\n\r\n### initializeArrayWithValues\r\n\r\nInitializes and fills an array with the specified values.\r\n\r\nUse `Array(n)` to create an array of the desired length, `fill(v)` to fill it with the desired values.\r\nYou can omit `val` to use a default value of `0`.\r\n\r\n```js\r\nconst initializeArrayWithValues = (n, val = 0) => Array(n).fill(val);\r\n```\r\n\r\n<details>\r\n<summary>Examples</summary>\r\n\r\n```js\r\ninitializeArrayWithValues(5, 2); // [2,2,2,2,2]\r\n```\r\n\r\n</details>\r\n\r\n<br>[\u2b06 Back to top](#table-of-contents)",
    "file": "Proyectos/Cheo_M6Hmynm.pdf",
    "image": "Images/OKHwm.jpg",
    "slug": "cumbres-borrascosas",
    "state": true,
    "created_date": "2018-02-02T18:01:31.582Z",
    "modified_date": "2018-02-02T18:02:51.219Z"
  }
},
{
  "model": "projects.projects",
  "pk": 17,
  "fields": {
    "user": 2,
    "Category": 2,
    "name": "media guerra",
    "description": "### intersection\r\n\r\nReturns a list of elements that exist in both arrays.\r\n\r\nCreate a `Set` from `b`, then use `Array.filter()` on `a` to only keep values contained in `b`.\r\n\r\n```js\r\nconst intersection = (a, b) => {\r\n  const s = new Set(b);\r\n  return a.filter(x => s.has(x));\r\n};\r\n```\r\n\r\n<details>\r\n<summary>Examples</summary>\r\n\r\n```js\r\nintersection([1, 2, 3], [4, 3, 2]); // [2,3]\r\n```\r\n\r\n</details>\r\n\r\n<br>[\u2b06 Back to top](#table-of-contents)\r\n\r\n\r\n### intersectionBy\r\n\r\nReturns a list of elements that exist in both arrays, after applying the provided function to each array element of both.\r\n\r\nCreate a `Set` by applying `fn` to all elements in `b`, then use `Array.filter()` on `a` to only keep elements, which produce values contained in `b` when `fn` is applied to them.\r\n\r\n```js\r\nconst intersectionBy = (a, b, fn) => {\r\n  const s = new Set(b.map(x => fn(x)));\r\n  return a.filter(x => s.has(fn(x)));\r\n};\r\n```\r\n\r\n<details>\r\n<summary>Examples</summary>\r\n\r\n```js\r\nintersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor); // [2.1]\r\n```\r\n\r\n</details>\r\n\r\n<br>[\u2b06 Back to top](#table-of-contents)\r\n\r\n\r\n### intersectionWith\r\n\r\nReturns a list of elements that exist in both arrays, using a provided comparator function.\r\n\r\nUse `Array.filter()` and `Array.findIndex()` in combination with the provided comparator to determine intersecting values.\r\n\r\n```js\r\nconst intersectionWith = (a, b, comp) => a.filter(x => b.findIndex(y => comp(x, y)) !== -1);\r\n```\r\n\r\n<details>\r\n<summary>Examples</summary>\r\n\r\n```js\r\nintersectionWith([1, 1.2, 1.5, 3, 0], [1.9, 3, 0, 3.9], (a, b) => Math.round(a) === Math.round(b)); // [1.5, 3, 0]\r\n```\r\n\r\n</details>\r\n\r\n<br>[\u2b06 Back to top](#table-of-contents)\r\n\r\n\r\n### isSorted\r\n\r\nReturns `1` if the array is sorted in ascending order, `-1` if it is sorted in descending order or `0` if it is not sorted.\r\n\r\nCalculate the ordering `direction` for the first two elements.\r\nUse `Object.entries()` to loop over array objects and compare them in pairs.\r\nReturn `0` if the `direction` changes or the `direction` if the last element is reached.\r\n\r\n```js\r\nconst isSorted = arr => {\r\n  const direction = arr[0] > arr[1] ? -1 : 1;\r\n  for (let [i, val] of arr.entries())\r\n    if (i === arr.length - 1) return direction;\r\n    else if ((val - arr[i + 1]) * direction > 0) return 0;\r\n};\r\n```\r\n\r\n<details>\r\n<summary>Examples</summary>\r\n\r\n```js\r\nisSorted([0, 1, 2, 2]); // 1\r\nisSorted([4, 3, 2]); // -1\r\nisSorted([4, 3, 5]); // 0\r\n```\r\n\r\n</details>\r\n\r\n<br>[\u2b06 Back to top](#table-of-contents)",
    "file": "",
    "image": "",
    "slug": "media-guerra",
    "state": true,
    "created_date": "2018-02-02T18:10:57.195Z",
    "modified_date": "2018-02-02T18:10:57.195Z"
  }
},
{
  "model": "projects.projects",
  "pk": 18,
  "fields": {
    "user": 2,
    "Category": 2,
    "name": "apollogia de lo absurdo",
    "description": "# A React Ionicon Component\r\n\r\n<p align=\"center\">\r\n  <img src=\"https://raw.githubusercontent.com/zamarrowski/react-ionicons/master/ionicons-logo.png\">\r\n</p>\r\n\r\nView page: https://zamarrowski.github.io/react-ionicons/\r\n\r\n## Install\r\n\r\n```sh\r\n$ npm install --save react-ionicons\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nimport React from 'react'\r\nimport { render } from 'react-dom'\r\nimport Ionicon from 'react-ionicons'\r\n\r\nrender(\r\n  <Ionicon icon=\"ios-add-circle\" fontSize=\"35px\" onClick={() => console.log('Hi!')} color=\"red\"/>\r\n  <Ionicon icon=\"ios-alert\" rotate={true} fontSize=\"35px\" color=\"blue\"/>\r\n  <Ionicon icon=\"ios-analytics-outline\" fontSize=\"35px\" color=\"#C9C9C9\"/>\r\n  <Ionicon icon=\"md-basket\" fontSize=\"35px\" color=\"rgb(125, 176, 24)\"/>\r\n  <Ionicon icon=\"md-calculator\" rotate={true} fontSize=\"35px\" color=\"rgb(125, 176, 24)\"/>\r\n, document.getElementById('container'))\r\n```\r\n\r\n### Browserify\r\n\r\n[`browserify`](https://npmjs.com/packages/browserify) is supported, but you have to install [`browserify-css@^0.12.0`](https://npmjs.com/packages/browserify-css) manually.\r\n\r\n## Features\r\n\r\n* No dependencies, just React.\r\n* SVG Icons.\r\n* Simple API.\r\n* Animations.\r\n* Customizable.\r\n* Support to Create React App.\r\n\r\n## API:\r\n\r\n| Param | Type | Description | Example |\r\n| --- | --- | --- | --- |\r\n| `icon` | `String` | Icon of ionicons. See https://ionicframework.com/docs/ionicons/. | `icon=\"ion-home\"` |\r\n| `className` | `String` | Name of a CSS class | `className=\"myClass\"` |\r\n| `fontSize` | `String` | Icon size. Allow all units (px, em, %, pt...). | `fontSize=\"35px\"` |\r\n| `color` | `String` | Icon color. Allow string (blue, red, cyan...), rgb, rgba and hexadecimal colors. | `color=\"#C9C9C9\"` |\r\n| `rotate` | `Boolean` | Apply rotate animation to icon | `rotate={true}` |\r\n| `shake` | `Boolean` | Apply shake animation to icon | `shake={true}` |\r\n| `beat` | `Boolean` | Apply beat animation to icon | `beat={true}` |\r\n| `onClick` | `Function` | Pass a function to execute onClick | `onClick={() => console.log('Hi!')}` |",
    "file": "Proyectos/Jessi_ViNbRGQ.pdf",
    "image": "Images/00c235f69a65b2e036f3660e241f960d.jpg",
    "slug": "apollogia-de-lo-absurdo",
    "state": true,
    "created_date": "2018-02-03T01:04:00.700Z",
    "modified_date": "2018-02-03T01:04:00.700Z"
  }
},
{
  "model": "projects.projects",
  "pk": 19,
  "fields": {
    "user": 2,
    "Category": 2,
    "name": "grafologia",
    "description": "# array-unique [![NPM version](https://img.shields.io/npm/v/array-unique.svg?style=flat)](https://www.npmjs.com/package/array-unique) [![NPM downloads](https://img.shields.io/npm/dm/array-unique.svg?style=flat)](https://npmjs.org/package/array-unique) [![Build Status](https://img.shields.io/travis/jonschlinkert/array-unique.svg?style=flat)](https://travis-ci.org/jonschlinkert/array-unique)\r\n\r\nRemove duplicate values from an array. Fastest ES5 implementation.\r\n\r\n## Install\r\n\r\nInstall with [npm](https://www.npmjs.com/):\r\n\r\n```sh\r\n$ npm install --save array-unique\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nvar unique = require('array-unique');\r\n\r\nvar arr = ['a', 'b', 'c', 'c'];\r\nconsole.log(unique(arr)) //=> ['a', 'b', 'c']\r\nconsole.log(arr)         //=> ['a', 'b', 'c']\r\n\r\n/* The above modifies the input array. To prevent that at a slight performance cost: */\r\nvar unique = require(\"array-unique\").immutable;\r\n\r\nvar arr = ['a', 'b', 'c', 'c'];\r\nconsole.log(unique(arr)) //=> ['a', 'b', 'c']\r\nconsole.log(arr)         //=> ['a', 'b', 'c', 'c']\r\n```\r\n\r\n## About\r\n\r\n### Related projects\r\n\r\n* [arr-diff](https://www.npmjs.com/package/arr-diff): Returns an array with only the unique values from the first array, by excluding all\u2026 [more](https://github.com/jonschlinkert/arr-diff) | [homepage](https://github.com/jonschlinkert/arr-diff \"Returns an array with only the unique values from the first array, by excluding all values from additional arrays using strict equality for comparisons.\")\r\n* [arr-flatten](https://www.npmjs.com/package/arr-flatten): Recursively flatten an array or arrays. This is the fastest implementation of array flatten. | [homepage](https://github.com/jonschlinkert/arr-flatten \"Recursively flatten an array or arrays. This is the fastest implementation of array flatten.\")\r\n* [arr-map](https://www.npmjs.com/package/arr-map): Faster, node.js focused alternative to JavaScript's native array map. | [homepage](https://github.com/jonschlinkert/arr-map \"Faster, node.js focused alternative to JavaScript's native array map.\")\r\n* [arr-pluck](https://www.npmjs.com/package/arr-pluck): Retrieves the value of a specified property from all elements in the collection. | [homepage](https://github.com/jonschlinkert/arr-pluck \"Retrieves the value of a specified property from all elements in the collection.\")\r\n* [arr-reduce](https://www.npmjs.com/package/arr-reduce): Fast array reduce that also loops over sparse elements. | [homepage](https://github.com/jonschlinkert/arr-reduce \"Fast array reduce that also loops over sparse elements.\")\r\n* [arr-union](https://www.npmjs.com/package/arr-union): Combines a list of arrays, returning a single array with unique values, using strict equality\u2026 [more](https://github.com/jonschlinkert/arr-union) | [homepage](https://github.com/jonschlinkert/arr-union \"Combines a list of arrays, returning a single array with unique values, using strict equality for comparisons.\")\r\n\r\n### Contributing\r\n\r\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\r\n\r\n### Building docs\r\n\r\n_(This document was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme) (a [verb](https://github.com/verbose/verb) generator), please don't edit the readme directly. Any changes to the readme must be made in [.verb.md](.verb.md).)_\r\n\r\nTo generate the readme and API documentation with [verb](https://github.com/verbose/verb):\r\n\r\n```sh\r\n$ npm install -g verb verb-generate-readme && verb\r\n```\r\n\r\n### Running tests\r\n\r\nInstall dev dependencies:\r\n\r\n```sh\r\n$ npm install -d && npm test\r\n```\r\n\r\n### Author\r\n\r\n**Jon Schlinkert**\r\n\r\n* [github/jonschlinkert](https://github.com/jonschlinkert)\r\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\r\n\r\n### License\r\n\r\nCopyright \u00a9 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\r\nReleased under the [MIT license](https://github.com/jonschlinkert/array-unique/blob/master/LICENSE).\r\n\r\n***\r\n\r\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.1.28, on July 31, 2016._",
    "file": "Proyectos/Cheo_NeGkVCf.pdf",
    "image": "Images/BZN4ukW_zvk7Oef.jpg",
    "slug": "grafologia",
    "state": true,
    "created_date": "2018-02-03T01:06:24.352Z",
    "modified_date": "2018-02-03T01:06:24.352Z"
  }
},
{
  "model": "projects.projects",
  "pk": 20,
  "fields": {
    "user": 1,
    "Category": 2,
    "name": "gimick",
    "description": "# color-string\r\n\r\n[![Build Status](https://travis-ci.org/Qix-/color-string.svg?branch=master)](https://travis-ci.org/Qix-/color-string)\r\n\r\n> library for parsing and generating CSS color strings.\r\n\r\n## Install\r\n\r\nWith [npm](http://npmjs.org/):\r\n\r\n```console\r\n$ npm install color-string\r\n```\r\n\r\n## Usage\r\n\r\n### Parsing\r\n\r\n```js\r\ncolorString.get('#FFF')                          // {model: 'rgb', value: [255, 255, 255, 1]}\r\ncolorString.get('#FFFA')                         // {model: 'rgb', value: [255, 255, 255, 0.67]}\r\ncolorString.get('#FFFFFFAA')                     // {model: 'rgb', value: [255, 255, 255, 0.67]}\r\ncolorString.get('hsl(360, 100%, 50%)')           // {model: 'hsl', value: [0, 100, 50, 1]}\r\ncolorString.get('hwb(60, 3%, 60%)')              // {model: 'hwb', value: [60, 3, 60, 1]}\r\n\r\ncolorString.get.rgb('#FFF')                      // [255, 255, 255, 1]\r\ncolorString.get.rgb('blue')                      // [0, 0, 255, 1]\r\ncolorString.get.rgb('rgba(200, 60, 60, 0.3)')    // [200, 60, 60, 0.3]\r\ncolorString.get.rgb('rgb(200, 200, 200)')        // [200, 200, 200, 1]\r\n\r\ncolorString.get.hsl('hsl(360, 100%, 50%)')       // [0, 100, 50, 1]\r\ncolorString.get.hsl('hsla(360, 60%, 50%, 0.4)')  // [0, 60, 50, 0.4]\r\n\r\ncolorString.get.hwb('hwb(60, 3%, 60%)')          // [60, 3, 60, 1]\r\ncolorString.get.hwb('hwb(60, 3%, 60%, 0.6)')     // [60, 3, 60, 0.6]\r\n\r\ncolorString.get.rgb('invalid color string')      // null\r\n```\r\n\r\n### Generation\r\n\r\n```js\r\ncolorString.to.hex([255, 255, 255])     // \"#FFFFFF\"\r\ncolorString.to.hex([0, 0, 255, 0.4])    // \"#0000FF66\"\r\ncolorString.to.hex([0, 0, 255], 0.4)    // \"#0000FF66\"\r\ncolorString.to.rgb([255, 255, 255])     // \"rgb(255, 255, 255)\"\r\ncolorString.to.rgb([0, 0, 255, 0.4])    // \"rgba(0, 0, 255, 0.4)\"\r\ncolorString.to.rgb([0, 0, 255], 0.4)    // \"rgba(0, 0, 255, 0.4)\"\r\ncolorString.to.rgb.percent([0, 0, 255]) // \"rgb(0%, 0%, 100%)\"\r\ncolorString.to.keyword([255, 255, 0])   // \"yellow\"\r\ncolorString.to.hsl([360, 100, 100])     // \"hsl(360, 100%, 100%)\"\r\ncolorString.to.hwb([50, 3, 15])         // \"hwb(50, 3%, 15%)\"\r\n\r\n// all functions also support swizzling\r\ncolorString.to.rgb(0, [0, 255], 0.4)    // \"rgba(0, 0, 255, 0.4)\"\r\ncolorString.to.rgb([0, 0], [255], 0.4)  // \"rgba(0, 0, 255, 0.4)\"\r\ncolorString.to.rgb([0], 0, [255, 0.4])  // \"rgba(0, 0, 255, 0.4)\"\r\n```",
    "file": "Proyectos/Folleto_adultos.pdf",
    "image": "Images/DU6Ru2IU0AAlHHK_HgXOYdd.jpg",
    "slug": "gimick",
    "state": true,
    "created_date": "2018-02-03T03:43:59.793Z",
    "modified_date": "2018-02-03T03:43:59.793Z"
  }
}
]
